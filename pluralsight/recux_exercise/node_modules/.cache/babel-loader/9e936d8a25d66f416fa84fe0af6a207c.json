{"ast":null,"code":"import _classCallCheck from \"/Users/dallinbs/dev/assignments/pluralsight/lab5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/dallinbs/dev/assignments/pluralsight/lab5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js';\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth(history) {\n    var _this = this;\n\n    _classCallCheck(this, Auth);\n\n    this.login = function () {\n      _this.auth0.authorize();\n    };\n\n    this.handleAuthentication = function () {\n      _this.auth0.parseHash(function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this.setSession(authResult);\n\n          _this.history.push(\"/\");\n        } else if (err) {\n          _this.history.push(\"/\");\n\n          alert(\"Error: \".concat(err.error, \". Check the console for further details.\"));\n          console.log(err);\n        }\n      });\n    };\n\n    this.setSession = function (authResult) {\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem(\"access_token\", authResult.accesstoken);\n      localStorage.setItem(\"id_token\", authResult.idToken);\n      localStorage.setItem(\"expires_at\", expiresAt);\n    };\n\n    this.logout = function () {\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"id_token\");\n      localStorage.removeItem(\"expires_at\");\n      _this.userProfile = null;\n\n      _this.auth0.logout({\n        clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n        returnTo: \"http://localhost:3000\"\n      });\n    };\n\n    this.getAccessToken = function () {\n      var accessToken = localStorage.getItem(\"access_token\");\n\n      if (!accessToken) {\n        throw new Error(\"No access token found.\");\n      }\n\n      return accessToken;\n    };\n\n    this.getProfile = function (cb) {\n      if (_this.userProfile) return cb(_this.userProfile);\n\n      _this.auth0.client.userInfo(_this.getAccessToken());\n    };\n\n    this.history = history;\n    this.userProfile = null;\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n      responseType: \"token id_token\",\n      scope: \"openid profile email\"\n    });\n  }\n\n  _createClass(Auth, [{\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      var expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/dallinbs/dev/assignments/pluralsight/lab5/src/Auth/Auth.js"],"names":["auth0","Auth","history","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","error","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","localStorage","setItem","accesstoken","logout","removeItem","userProfile","clientID","process","env","REACT_APP_AUTH0_CLIENT_ID","returnTo","getAccessToken","getItem","Error","getProfile","cb","client","userInfo","WebAuth","domain","REACT_APP_AUTH0_DOMAIN","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","responseType","scope","parse"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,UAAlB;;IAEqBC,I;;;AACjB,gBAAYC,OAAZ,EAAoB;AAAA;;AAAA;;AAAA,SAWhBC,KAXgB,GAWR,YAAM;AACV,MAAA,KAAI,CAACH,KAAL,CAAWI,SAAX;AACH,KAbe;;AAAA,SAehBC,oBAfgB,GAeO,YAAM;AACzB,MAAA,KAAI,CAACL,KAAL,CAAWM,SAAX,CAAqB,UAACC,GAAD,EAAKC,UAAL,EAAoB;AACrC,YAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAA+D;AAC3D,UAAA,KAAI,CAACC,UAAL,CAAgBH,UAAhB;;AACA,UAAA,KAAI,CAACN,OAAL,CAAaU,IAAb,CAAkB,GAAlB;AACH,SAHD,MAGO,IAAIL,GAAJ,EAAQ;AACX,UAAA,KAAI,CAACL,OAAL,CAAaU,IAAb,CAAkB,GAAlB;;AACAC,UAAAA,KAAK,kBAAWN,GAAG,CAACO,KAAf,8CAAL;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACH;AACJ,OATD;AAUH,KA1Be;;AAAA,SA4BhBI,UA5BgB,GA4BH,UAAAH,UAAU,EAAI;AACvB,UAAMS,SAAS,GAAGC,IAAI,CAACC,SAAL,CACdX,UAAU,CAACY,SAAX,GAAuB,IAAvB,GAA8B,IAAIC,IAAJ,GAAWC,OAAX,EADhB,CAAlB;AAGJC,MAAAA,YAAY,CAACC,OAAb,CAAqB,cAArB,EAAqChB,UAAU,CAACiB,WAAhD;AACAF,MAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiChB,UAAU,CAACE,OAA5C;AACAa,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCP,SAAnC;AACC,KAnCe;;AAAA,SA0ChBS,MA1CgB,GA0CP,YAAM;AACXH,MAAAA,YAAY,CAACI,UAAb,CAAwB,cAAxB;AACAJ,MAAAA,YAAY,CAACI,UAAb,CAAwB,UAAxB;AACAJ,MAAAA,YAAY,CAACI,UAAb,CAAwB,YAAxB;AACA,MAAA,KAAI,CAACC,WAAL,GAAmB,IAAnB;;AACA,MAAA,KAAI,CAAC5B,KAAL,CAAW0B,MAAX,CAAkB;AACdG,QAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBADR;AAEdC,QAAAA,QAAQ,EAAE;AAFI,OAAlB;AAIH,KAnDe;;AAAA,SAqDhBC,cArDgB,GAqDC,YAAM;AACnB,UAAMzB,WAAW,GAAGc,YAAY,CAACY,OAAb,CAAqB,cAArB,CAApB;;AACA,UAAI,CAAC1B,WAAL,EAAkB;AACd,cAAM,IAAI2B,KAAJ,CAAW,wBAAX,CAAN;AACH;;AACD,aAAO3B,WAAP;AACH,KA3De;;AAAA,SA6DhB4B,UA7DgB,GA6DH,UAAAC,EAAE,EAAI;AACf,UAAI,KAAI,CAACV,WAAT,EAAsB,OAAOU,EAAE,CAAC,KAAI,CAACV,WAAN,CAAT;;AACtB,MAAA,KAAI,CAAC5B,KAAL,CAAWuC,MAAX,CAAkBC,QAAlB,CAA2B,KAAI,CAACN,cAAL,EAA3B;AACH,KAhEe;;AAChB,SAAKhC,OAAL,GAAeA,OAAf;AACA,SAAK0B,WAAL,GAAmB,IAAnB;AACA,SAAK5B,KAAL,GAAa,IAAIA,KAAK,CAACyC,OAAV,CAAkB;AAC3BC,MAAAA,MAAM,EAAEZ,OAAO,CAACC,GAAR,CAAYY,sBADO;AAE3Bd,MAAAA,QAAQ,EAAEC,OAAO,CAACC,GAAR,CAAYC,yBAFK;AAG3BY,MAAAA,WAAW,EAAEd,OAAO,CAACC,GAAR,CAAYc,4BAHE;AAI3BC,MAAAA,YAAY,EAAE,gBAJa;AAK3BC,MAAAA,KAAK,EAAE;AALoB,KAAlB,CAAb;AAOH;;;;sCA2BoB;AACb,UAAM9B,SAAS,GAAGC,IAAI,CAAC8B,KAAL,CAAWzB,YAAY,CAACY,OAAb,CAAqB,YAArB,CAAX,CAAlB;AACA,aAAO,IAAId,IAAJ,GAAWC,OAAX,KAAuBL,SAA9B;AACH;;;;;;SAzCYhB,I","sourcesContent":["import auth0 from 'auth0-js'\n\nexport default class Auth {\n    constructor(history){\n        this.history = history;\n        this.userProfile = null;\n        this.auth0 = new auth0.WebAuth({\n            domain: process.env.REACT_APP_AUTH0_DOMAIN,\n            clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n            redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n            responseType: \"token id_token\",\n            scope: \"openid profile email\"\n        })\n    }\n        login = () => {\n            this.auth0.authorize()\n        }\n\n        handleAuthentication = () => {\n            this.auth0.parseHash((err,authResult) => {\n                if (authResult && authResult.accessToken && authResult.idToken){\n                    this.setSession(authResult);\n                    this.history.push(\"/\");\n                } else if (err){\n                    this.history.push(\"/\");\n                    alert(`Error: ${err.error}. Check the console for further details.`);\n                    console.log(err);\n                }\n            })\n        }\n\n        setSession = authResult => {\n            const expiresAt = JSON.stringify(\n                authResult.expiresIn * 1000 + new Date().getTime()\n            )\n        localStorage.setItem(\"access_token\", authResult.accesstoken);\n        localStorage.setItem(\"id_token\", authResult.idToken);\n        localStorage.setItem(\"expires_at\", expiresAt);\n        };\n\n        isAuthenticated(){\n            const expiresAt = JSON.parse(localStorage.getItem(\"expires_at\"));\n            return new Date().getTime() < expiresAt;\n        }\n\n        logout = () => {\n            localStorage.removeItem(\"access_token\");\n            localStorage.removeItem(\"id_token\");\n            localStorage.removeItem(\"expires_at\");\n            this.userProfile = null;\n            this.auth0.logout({\n                clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n                returnTo: \"http://localhost:3000\"\n            })\n        }\n\n        getAccessToken = () => {\n            const accessToken = localStorage.getItem(\"access_token\");\n            if (!accessToken) {\n                throw new Error (\"No access token found.\");\n            }\n            return accessToken;\n        }\n\n        getProfile = cb => {\n            if (this.userProfile) return cb(this.userProfile);\n            this.auth0.client.userInfo(this.getAccessToken())\n        }\n}"]},"metadata":{},"sourceType":"module"}