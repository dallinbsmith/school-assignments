{"ast":null,"code":"import _classCallCheck from \"/Users/dallinbs/dev/assignments/pluralsight/lab5/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport auth0 from 'auth0-js';\n\nvar Auth = function Auth(history) {\n  var _this = this;\n\n  _classCallCheck(this, Auth);\n\n  this.login = function () {\n    _this.auth0.authorize();\n  };\n\n  this.handleAuthentication = function () {\n    _this.auth0.parseHash(function (err, authResult) {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        _this.setSession(authResult);\n\n        _this.history.push(\"/\");\n      } else if (err) {\n        _this.history.push(\"/\");\n\n        alert(\"Error: \".concat(err.error, \". Check the console for further details\"));\n      }\n    });\n  };\n\n  this.history = history;\n  this.auth0 = new auth0.WebAuth({\n    domain: process.env.REACT_APP_AUTH0_DOMAIN,\n    clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n    redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n    responseType: \"token id_token\",\n    scope: \"openid profile email\"\n  });\n};\n\nexport { Auth as default };","map":{"version":3,"sources":["/Users/dallinbs/dev/assignments/pluralsight/lab5/src/Auth/Auth.js"],"names":["auth0","Auth","history","login","authorize","handleAuthentication","parseHash","err","authResult","accessToken","idToken","setSession","push","alert","error","WebAuth","domain","process","env","REACT_APP_AUTH0_DOMAIN","clientID","REACT_APP_AUTH0_CLIENT_ID","redirectUri","REACT_APP_AUTH0_CALLBACK_URL","responseType","scope"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,UAAlB;;IAEqBC,I,GACjB,cAAYC,OAAZ,EAAoB;AAAA;;AAAA;;AAAA,OAUhBC,KAVgB,GAUR,YAAM;AACV,IAAA,KAAI,CAACH,KAAL,CAAWI,SAAX;AACH,GAZe;;AAAA,OAahBC,oBAbgB,GAaO,YAAM;AACzB,IAAA,KAAI,CAACL,KAAL,CAAWM,SAAX,CAAqB,UAACC,GAAD,EAAKC,UAAL,EAAoB;AACrC,UAAIA,UAAU,IAAIA,UAAU,CAACC,WAAzB,IAAwCD,UAAU,CAACE,OAAvD,EAA+D;AAC3D,QAAA,KAAI,CAACC,UAAL,CAAgBH,UAAhB;;AACA,QAAA,KAAI,CAACN,OAAL,CAAaU,IAAb,CAAkB,GAAlB;AACH,OAHD,MAGO,IAAIL,GAAJ,EAAQ;AACX,QAAA,KAAI,CAACL,OAAL,CAAaU,IAAb,CAAkB,GAAlB;;AACAC,QAAAA,KAAK,kBAAWN,GAAG,CAACO,KAAf,6CAAL;AACH;AACJ,KARD;AASH,GAvBe;;AAChB,OAAKZ,OAAL,GAAeA,OAAf;AACA,OAAKF,KAAL,GAAa,IAAIA,KAAK,CAACe,OAAV,CAAkB;AAC3BC,IAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,sBADO;AAE3BC,IAAAA,QAAQ,EAAEH,OAAO,CAACC,GAAR,CAAYG,yBAFK;AAG3BC,IAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,4BAHE;AAI3BC,IAAAA,YAAY,EAAE,gBAJa;AAK3BC,IAAAA,KAAK,EAAE;AALoB,GAAlB,CAAb;AAOH,C;;SAVgBxB,I","sourcesContent":["import auth0 from 'auth0-js'\n\nexport default class Auth {\n    constructor(history){\n        this.history = history;\n        this.auth0 = new auth0.WebAuth({\n            domain: process.env.REACT_APP_AUTH0_DOMAIN,\n            clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n            redirectUri: process.env.REACT_APP_AUTH0_CALLBACK_URL,\n            responseType: \"token id_token\",\n            scope: \"openid profile email\"\n        })\n    }\n        login = () => {\n            this.auth0.authorize()\n        }\n        handleAuthentication = () => {\n            this.auth0.parseHash((err,authResult) => {\n                if (authResult && authResult.accessToken && authResult.idToken){\n                    this.setSession(authResult);\n                    this.history.push(\"/\");\n                } else if (err){\n                    this.history.push(\"/\");\n                    alert(`Error: ${err.error}. Check the console for further details`)\n                }\n            })\n        }\n}"]},"metadata":{},"sourceType":"module"}